<?xml version="1.0" encoding="utf-8"?>
<!-- This is an autogenerated file based on mw-scons-tools/templates/vcxproj.xml -->
<!-- Any changes made here will be lost. -->
<!-- A REPLACEME comment indicates that a replacement has not been made. -->
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
#{REPLACEME:project_configurations}
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>#{REPLACEME:project_guid}</ProjectGuid>
    <RootNamespace>#{REPLACEME:root_namespace}</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
#{REPLACEME:configuration_groups}
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <PropertyGroup>
    <!-- If running from scons, some properties may not be set up -->
    <VCTargetsPath Condition="'$(VCTargetsPath)' == ''">C:\Program Files (x86)\MSBuild\Microsoft.Cpp\\v4.0\$(PlatformToolset)\</VCTargetsPath>
    <!-- Paths -->
    <!-- Standard Paths used by msbuild -->
    <OutDir>$(ProjectDir)\obj\$(Platform)\</OutDir>
    <IntDir>$(ProjectDir)\obj\$(RootNamespace)_Int\$(Platform)\$(Configuration)\</IntDir>
    <!-- Some properties based on the Configuration -->
    <MBIsDebug>#{REPLACEME:mb_is_debug}</MBIsDebug>
    <MBIsRelease>#{REPLACEME:mb_is_release}</MBIsRelease>
    <MBPreprocessorDebugDefs Condition="$(MBIsDebug)">_DEBUG</MBPreprocessorDebugDefs>
    <MBPreprocessorDebugDefs Condition="$(MBIsRelease)">NDEBUG</MBPreprocessorDebugDefs>
    <apiDefine Condition="'$(ConfigurationType)' == 'DynamicLibrary'">#{REPLACEME:api_export}=__declspec(dllexport)</apiDefine>
    <apiDefine Condition="'$(ConfigurationType)' != 'DynamicLibrary'">#{REPLACEME:api_export}=</apiDefine>
    <!-- We use dynamic linkage against the C++ runtime by default -->
    <runtimeLinkType Condition="'$(driverConfiguration)'=='false'">DLL</runtimeLinkType>
    <!-- We only need to use dllimport if we're linking against DLLs, and we don't do that in the driver -->
    <importSiblings Condition="'$(driverConfiguration)'=='false'">__declspec(dllimport)</importSiblings>
    <MBPreprocessorAPIDefs>
      $(apiDefine);
#{REPLACEME:api_imports}
    </MBPreprocessorAPIDefs>
    <!-- There are some preprocessor defines that we only want in the standard config -->
    <standardConfigPreprocessorDefinitions Condition="'$(driverConfiguration)'=='false'">
#{REPLACEME:standard_config_preprocessor_defines}
    </standardConfigPreprocessorDefinitions>
    <!-- Adds a bunch of stuff to the path for debugging. -->
    <!-- Formatting matters a lot here, there should be one thing with no leading spaces per line. -->
    <LocalDebuggerEnvironment>PATH=%PATH%;$(QT5DIR)\bin;#{REPLACEME:debugging_path}
QT_PLUGIN_PATH=$(QT5DIR)\plugins
$(LocalDebuggerEnvironment)
    </LocalDebuggerEnvironment>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <DebugInformationFormat>OldStyle</DebugInformationFormat>
      <WarningLevel>Level3</WarningLevel>
      <Optimization Condition="$(MBIsDebug)">Disabled</Optimization>
      <Optimization Condition="$(MBIsRelease)">MaxSpeed</Optimization>
      <FunctionLevelLinking>$(MBIsRelease)</FunctionLevelLinking>
      <IntrinsicFunctions>$(MBIsRelease)</IntrinsicFunctions>
      <SDLCheck>#{REPLACEME:sdl_check}</SDLCheck>
      <BufferSecurityCheck>#{REPLACEME:buffer_security_check}</BufferSecurityCheck>
      <!-- AdditionalOptions cannot be on individual lines because of a bug in msbuild-->
      <AdditionalOptions>#{REPLACEME:additional_options}%(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>
        $(MBPreprocessorDebugDefs);
        $(MBPreprocessorAPIDefs);
#{REPLACEME:preprocessor_definitions}
        $(PreprocessorDefinitions);
        %(PreprocessorDefinitions)
      </PreprocessorDefinitions>
      <AdditionalIncludeDirectories>
#{REPLACEME:additional_include_directories}
        %(AdditionalIncludeDirectories)
      </AdditionalIncludeDirectories>
      <!-- We use dynamic linkage against the C++ runtime by default, but the driver uses static linkage -->
      <RuntimeLibrary>MultiThreaded#{REPLACEME:runtime_library_debugness}$(runtimeLinkType)</RuntimeLibrary>
      <!-- Apparently the windows driver requires StdCall (but only on Win32, x64 has its own calling conventions -->
      <CallingConvention Condition="'$(driverConfiguration)'=='true' and '$(Platform)'=='Win32'">StdCall</CallingConvention>
      <DisableSpecificWarnings>
#{REPLACEME:disable_specific_warnings}
        %(DisableSpecificWarnings)
      </DisableSpecificWarnings>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>$(MBIsRelease)</EnableCOMDATFolding>
      <OptimizeReferences>$(MBIsRelease)</OptimizeReferences>
      <AdditionalDependencies>
#{REPLACEME:additional_dependencies}
        %(AdditionalDependencies)
      </AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>
#{REPLACEME:ignore_specific_default_libraries}
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>
#{REPLACEME:additional_library_directories}
        $(OutDir)
        %(AdditionalLibraryDirectories)
      </AdditionalLibraryDirectories>
#{REPLACEME:subsystem}
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
#{REPLACEME:cl_compile}
  </ItemGroup>
  <ItemGroup>
#{REPLACEME:cl_include}
  </ItemGroup>
  <ItemGroup>
#{REPLACEME:resource_compile}
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>
